{"version":3,"file":"698.extension.js","mappings":"2GAAA,MAmDA,EAnDa,CACTA,IAAK,CACDC,IAAK,CACDC,OAAQ,CAAEC,IAAK,OACfC,QAAS,CAACC,EAAQH,KACdG,EAAOL,IAAIM,KAAKC,KAAKN,IAAIC,EAAOC,KAAK,GAG7CK,IAAK,CACDN,OAAQ,CAAEC,IAAK,OACfC,QAAS,CAACC,EAAQH,KACdG,EAAOL,IAAIM,MAAMJ,EAAOC,IAAI,IAIxCM,MAAO,CACHC,KAAM,CACFR,OAAQ,CAAEC,IAAK,SACfC,QAAS,CAACC,EAAQH,KACdG,EAAOL,IAAIM,KAAKC,KAAKG,KAAKR,EAAOC,KAAK,GAG9CQ,MAAO,CACHT,OAAQ,CAAEC,IAAK,SACfC,QAAS,CAACC,EAAQH,KACdG,EAAOL,IAAIM,KAAKC,KAAKI,MAAMT,EAAOC,KAAK,GAG/CS,MAAO,CACHV,OAAQ,CAAEC,IAAK,SACfC,QAAS,CAACC,EAAQH,KACdG,EAAOL,IAAIM,KAAKC,KAAKK,MAAMV,EAAOC,KAAK,GAG/CF,IAAK,CACDC,OAAQ,CAAEC,IAAK,SACfC,QAAS,CAACC,EAAQH,KACdG,EAAOI,MAAMH,KAAKC,KAAKN,IAAIC,EAAOC,KAAK,GAG/CK,IAAK,CACDN,OAAQ,CAAEC,IAAK,SACfC,QAAS,CAACC,EAAQH,KACdG,EAAOI,MAAMH,MAAMJ,EAAOC,IAAI,IAI1CU,IAAK,CAAC,EACNC,KAAM,CAAC,EACPC,IAAK,CAAC,E","sources":["webpack://typestack/./node_modules/typestack-lang/dist/modules/Math.js"],"sourcesContent":["const math = {\n    int: {\n        abs: {\n            params: { num: \"int\" },\n            rawCode: (stacks, params) => {\n                stacks.int.push(Math.abs(params.num));\n            },\n        },\n        neg: {\n            params: { num: \"int\" },\n            rawCode: (stacks, params) => {\n                stacks.int.push(-params.num);\n            },\n        },\n    },\n    float: {\n        ceil: {\n            params: { num: \"float\" },\n            rawCode: (stacks, params) => {\n                stacks.int.push(Math.ceil(params.num));\n            },\n        },\n        floor: {\n            params: { num: \"float\" },\n            rawCode: (stacks, params) => {\n                stacks.int.push(Math.floor(params.num));\n            },\n        },\n        round: {\n            params: { num: \"float\" },\n            rawCode: (stacks, params) => {\n                stacks.int.push(Math.round(params.num));\n            },\n        },\n        abs: {\n            params: { num: \"float\" },\n            rawCode: (stacks, params) => {\n                stacks.float.push(Math.abs(params.num));\n            },\n        },\n        neg: {\n            params: { num: \"float\" },\n            rawCode: (stacks, params) => {\n                stacks.float.push(-params.num);\n            },\n        },\n    },\n    str: {},\n    bool: {},\n    any: {},\n};\nexport default math;\n"],"names":["int","abs","params","num","rawCode","stacks","push","Math","neg","float","ceil","floor","round","str","bool","any"],"sourceRoot":""}